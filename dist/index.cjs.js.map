{"version":3,"file":"index.cjs.js","sources":["../src/components/Leetcodecalendar.tsx"],"sourcesContent":["import { useQuery, QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport ActivityCalendar from \"react-activity-calendar\";\r\n\r\n// Define the structure for LeetCode data\r\ninterface Leet {\r\n  date: string;\r\n  count: number;\r\n  level: number;\r\n}\r\n\r\ntype LeetcodecalendarProps = {\r\n  username: string;\r\n  graph?: string; // Optional, default is 'default'\r\n};\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst LeetcodecalendarComponent = ({ username, graph = \"default\" }: LeetcodecalendarProps) => {\r\n  useEffect(() => {\r\n    console.log(\"Graph prop received:\", graph);\r\n  }, [graph]);\r\n\r\n  const { data = [] as Leet[], isLoading, isError, error } = useQuery<Leet[]>({\r\n    queryKey: [\"leetcodeData\", username, graph],\r\n    queryFn: () => handlegetdata(username, graph),\r\n    staleTime: 0,\r\n    refetchOnMount: true,\r\n  });\r\n\r\n  const getTotalSubmissions = (leetdata: Leet[]) => {\r\n    return leetdata.reduce((total, data) => total + data.count, 0);\r\n  };\r\n\r\n  const generateInitialYearData = (startDate: string, endDate: string): Leet[] => {\r\n    const currentDate = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    const result: Leet[] = [];\r\n\r\n    while (currentDate <= end) {\r\n      result.push({\r\n        date: currentDate.toISOString().split(\"T\")[0],\r\n        count: 0,\r\n        level: 0,\r\n      });\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const filteredData =\r\n    graph === \"yearly\"\r\n      ? (() => {\r\n          const today = new Date();\r\n          const lastYear = new Date(today.setFullYear(today.getFullYear() - 1));\r\n          const startDate = lastYear.toISOString().split(\"T\")[0];\r\n          const endDate = new Date(lastYear.setFullYear(lastYear.getFullYear() + 1) - 1)\r\n            .toISOString()\r\n            .split(\"T\")[0];\r\n\r\n          const initialYearData = generateInitialYearData(startDate, endDate);\r\n\r\n          return initialYearData.map((item) => {\r\n            const matchingApiData = data.find((apiData) => apiData.date === item.date);\r\n            return matchingApiData\r\n              ? {\r\n                  ...item,\r\n                  count: matchingApiData.count,\r\n                  level: matchingApiData.level,\r\n                }\r\n              : item;\r\n          });\r\n        })()\r\n      : data;\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (isError) return <div>Error: {error?.message}</div>;\r\n\r\n  return (\r\n    <div className=\"bg-[#101828] text-white p-4\">\r\n      <div className=\"flex flex-col items-center\">\r\n        <h2 className=\"text-lg font-semibold mb-2\">\r\n          {graph === \"yearly\" ? \"Last Year's LeetCode Submissions\" : \"LeetCode Submissions\"}\r\n        </h2>\r\n        {filteredData.length > 0 ? (\r\n          <ActivityCalendar\r\n            data={filteredData}\r\n            labels={{\r\n              months: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n              weekdays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n              totalCount: `Total submissions: ${getTotalSubmissions(filteredData)}`,\r\n              legend: {\r\n                less: \"Few submissions\",\r\n                more: \"Many submissions\",\r\n              },\r\n            }}\r\n            theme={{\r\n              light: [\"#f0f0f0\", \"#c4edde\", \"#7ac7c4\", \"#f73859\", \"#384259\"],\r\n              dark: [\"#161B22\", \"#0E4429\", \"#006D32\", \"#26A641\", \"#39D353\"],\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data available for the given username.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Fetch LeetCode data using axios (Fixed the TypeScript error)\r\nconst handlegetdata = async (username: string, graph: string): Promise<Leet[]> => {\r\n  if (!username || username === \"string\") {\r\n    console.log(\"Invalid username or missing username\");\r\n    return [];\r\n  }\r\n\r\n  console.log(graph);\r\n\r\n  try {\r\n    const res = await axios.get(`https://leetcode-sub-endpoint.vercel.app/leetcode/${username}`);\r\n\r\n    if (!res.data || typeof res.data !== \"object\") {\r\n      console.error(\"Unexpected response format:\", res.data);\r\n      return [];\r\n    }\r\n\r\n    // Ensure TypeScript correctly understands res.data as an object with string keys and number values\r\n    const submissionCalendar = res.data as Record<string, number>;\r\n\r\n    const formattedData: Leet[] = Object.entries(submissionCalendar).map(([date, submission]) => ({\r\n      date,\r\n      count: submission,\r\n      level: submission > 0 ? Math.min(submission, 4) : 0,\r\n    }));\r\n\r\n    return formattedData;\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Leetcodecalendar = (props: LeetcodecalendarProps) => {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <LeetcodecalendarComponent {...props} />\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default Leetcodecalendar;\r\n"],"names":["QueryClient","useEffect","useQuery","_jsx","_jsxs","QueryClientProvider"],"mappings":"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"}